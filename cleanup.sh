#!/bin/bash
# Just a simple cleanup script so we don't leave
# a bunch of history behind at build-time
# THIS IS NOT AN END-USER SCRIPT
# Running this will DESTROY all your NEMS configuration and reset to factory defaults

if [[ $EUID -ne 0 ]]; then
  echo "ERROR: This script must be run as root" 2>&1
  exit 1
else
  
  if [[ $1 != "halt" ]]; then echo "Pass the halt option to halt after execution or the reboot option to reboot."; echo ""; fi;
  
  # Check if nemsadmin exists, and create it if not
  if [ ! -d /home/nemsadmin ]; then
    # Create the nemsadmin user
    adduser --disabled-password --gecos "" nemsadmin
  fi

  # Configure nemsadmin user as default admin
    # Allow user to become super-user
    usermod -aG sudo nemsadmin
    # Set the user password
    echo -e "nemsadmin\nnemsadmin" | passwd nemsadmin >/tmp/init 2>&1

  # Reset the RPi-Monitor users
  cp /root/nems/nems-migrator/data/rpimonitor/daemon.conf /etc/rpimonitor

  # Reset Samba users
  cp /root/nems/nems-migrator/data/samba/smb.conf /etc/samba

  usercount=$(find /home/* -maxdepth 0 -type d | wc -l)
  if (( $usercount == 1)); then
    echo "Looks like user accounts are ready to go."
  else
    echo "You have not removed your test users. Aborting."
    exit
  fi

  sync
  
  echo "Did you cp the database? This script will restore from Migrator. CTRL-C to abort."
  sleep 5

  ver=$(/usr/local/bin/nems-info nemsver) 
  
  # Stop services which may be using these files
  systemctl stop webmin
  systemctl stop rpimonitor
  systemctl stop monitorix
  systemctl stop apache2
  systemctl stop nagios
  systemctl stop smbd
  
  touch /tmp/nems.freeze

  # Delete system email
  rm /var/spool/mail/*

#  /usr/local/bin/nems-push # Ensure all changes are saved to github before continuing

  # Remove system-specific NEMS configuration
  echo 'version='$ver > /usr/local/share/nems/nems.conf # Create a base config file for this version of NEMS
  chown www-data:www-data /usr/local/share/nems/nems.conf # Make it writeable by NEMS SST
  rm /usr/local/share/nems/nems.conf~ # the backup file created by fixes.sh

  # Remove nano search history and such
  rm -rf /root/.nano
  rm -rf /home/nemsadmin/.nano

  sudo apt-get clean
  sudo apt-get autoclean
  apt-get autoremove

  echo "Don't forget to remove the old kernels:"
  dpkg --get-selections | grep linux-image

  # Delete all Samba users
  pdbedit -L | while read USER; do pdbedit -x -u $(echo $USER | cut -d: -f1); done

  # Empty old logs
  find /var/log/ -type f -exec cp /dev/null {} \;
  find /var/log/ -iname "*.gz" -type f -delete
  find /var/log/ -iname "*.log.*" -type f -delete
  rm /var/log/nagios/archives/*.log

  # Clear system mail
  find /var/mail/ -type f -exec cp /dev/null {} \;

  # Remove Webmin logs and sessions
  rm /var/webmin/webmin.log
  rm /var/webmin/miniserv.log
  rm /var/webmin/miniserv.error
  rm /var/webmin/sessiondb.pag
  
  # Clear RPi-Monitor history and stats
  rm /usr/share/rpimonitor/web/stat/*.rrd
  
  # Clear Monitorix history, stats and config
  echo "" > /etc/monitorix/conf.d/nems.conf
  rm /var/lib/monitorix/*.rrd
  rm /var/log/monitorix*
  rm /var/lib/monitorix/www/imgs/*.png
  rm /var/lib/monitorix/usage/*
  
  cd /root
  rm .nano_history
  rm .bash_history

  cd /home/nemsadmin
  rm .nano_history
  rm .bash_history

  rm /var/log/lastlog
  touch /var/log/lastlog

  # remove config backup from NEMS-Migrator
  rm /var/www/html/backup/backup.nems

  # Remove DNS Resolver config (will be auto-generated on first boot)
  echo "# Default resolv.conf file created by NEMS Admin

# Cloudflare
nameserver 1.1.1.1
nameserver 1.0.0.1
nameserver 2606:4700:4700::1111
nameserver 2606:4700:4700::1001

# Google
nameserver 8.8.8.8
nameserver 8.8.4.4
nameserver 2001:4860:4860::8888
nameserver 2001:4860:4860::8844
" > /etc/resolv.conf

  # remove output from nconf
  rm /var/www/nconf/output/*

  # Remove NEMS init password file
  rm /var/www/htpasswd

  # Remove NEMS Log Files
  rm /var/log/nems/*

  # Reset pi Linux User password to "raspberry"
  #pipassword="raspberry"
  #echo -e "$pipassword\n$pipassword" | passwd pi >/tmp/init 2>&1
  
  # Reset Nagios Core User
  cp -f /root/nems/nems-migrator/data/1.4/nagios/etc/cgi.cfg /usr/local/nagios/etc/
  
  # Reset Check_MK User
#  cp -f /root/nems/nems-migrator/data/check_mk/users.mk /etc/check_mk/multisite.d/wato/users.mk

  # Clear Nagios' resource.cfg file
  echo "################################################################################" > /usr/local/nagios/etc/resource.cfg
  echo "# Do not edit this file here. Use the NEMS System Settings Tool web interface. #" >> /usr/local/nagios/etc/resource.cfg
  echo "################################################################################" >> /usr/local/nagios/etc/resource.cfg
  echo "\$USER1$=/usr/local/nagios/libexec" >> /usr/local/nagios/etc/resource.cfg

  # Import default Nagios configs
  rm -rf /etc/nems/conf
  mkdir /etc/nems/conf
  cp -R /root/nems/nems-migrator/data/1.4/nagios/conf/* /etc/nems/conf/
  if [[ ! -d /etc/nems/conf/okconfig ]]; then
    mkdir /etc/nems/conf/okconfig
  fi
  chown -R www-data:www-data /etc/nems/conf/

  # Replace the database with Sample database
  systemctl stop mysql
  rm -rf /var/lib/mysql/
  cp -R /root/nems/nems-migrator/data/1.4/mysql/NEMS-Sample /var/lib
  mv /var/lib/NEMS-Sample /var/lib/mysql
  chown -R mysql:mysql /var/lib/mysql
  systemctl start mysql
  
  # Remove nconf history, should it exist
  mysql -u nconf -pnagiosadmin nconf -e "TRUNCATE History"

  # Remove NagVis user accounts and reset to default (empty) auth database
  cp -f /root/nems/nems-migrator/data/1.4/nagvis/auth.db /etc/nagvis/etc/
  chown www-data:www-data /etc/nagvis/etc/auth.db

  # Sync the current running version as the current available version
  # Will be overwritten on first boot
  /usr/local/share/nems/nems-scripts/info.sh nemsver > /var/www/html/inc/ver-available.txt
  
  # Replace installed certs with defaults
  rm -rf /var/www/certs/
  cp -R /root/nems/nems-migrator/data/certs /var/www
  chown -R root:root /var/www/certs

  sync
  
  if [[ $1 == "halt" ]]; then echo "Halting..."; halt; exit; fi;

  if [[ $1 == "reboot" ]]; then echo "Rebooting..."; reboot; exit; fi;

  # System still running: Restart services
  service networking restart
  systemctl start smbd
  systemctl start webmin
  systemctl start rpimonitor
  systemctl start monitorix
  systemctl start apache2
  systemctl start nagios
  rm /tmp/nems.freeze
  
fi
